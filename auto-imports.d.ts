/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// noinspection JSUnusedGlobalSymbols
// Generated by unplugin-auto-import
// biome-ignore lint: disable
export {}
declare global {
  const Avatar: typeof import('./src/components/ui/avatar/index')['Avatar']
  const AvatarFallback: typeof import('./src/components/ui/avatar/index')['AvatarFallback']
  const AvatarImage: typeof import('./src/components/ui/avatar/index')['AvatarImage']
  const Button: typeof import('./src/components/ui/button/index')['Button']
  const CaptchaEmitNotification: typeof import('./src/types/CaptchaEmitNotification')['default']
  const Card: typeof import('./src/components/ui/card/index')['Card']
  const CardContent: typeof import('./src/components/ui/card/index')['CardContent']
  const CardDescription: typeof import('./src/components/ui/card/index')['CardDescription']
  const CardFooter: typeof import('./src/components/ui/card/index')['CardFooter']
  const CardHeader: typeof import('./src/components/ui/card/index')['CardHeader']
  const CardTitle: typeof import('./src/components/ui/card/index')['CardTitle']
  const DEFAULT_SKILLS: typeof import('./src/types/EveryShiftRegistration')['DEFAULT_SKILLS']
  const EffectScope: typeof import('vue')['EffectScope']
  const Input: typeof import('./src/components/ui/input/index')['Input']
  const Label: typeof import('./src/components/ui/label/index')['Label']
  const Notification: typeof import('./src/types/Notification')['default']
  const NotificationAddRequest: typeof import('./src/types/NotificationAddRequest')['default']
  const PropsAppLoginForm: typeof import('./src/types/PropsAppLoginForm')['default']
  const RouterPathEnum: typeof import('./src/types/RouterPathEnum')['RouterPathEnum']
  const SHIFT_PATTERNS: typeof import('./src/types/EveryShiftRegistration')['SHIFT_PATTERNS']
  const Separator: typeof import('./src/components/ui/separator/index')['Separator']
  const Sheet: typeof import('./src/components/ui/sheet/index')['Sheet']
  const SheetClose: typeof import('./src/components/ui/sheet/index')['SheetClose']
  const SheetContent: typeof import('./src/components/ui/sheet/index')['SheetContent']
  const SheetDescription: typeof import('./src/components/ui/sheet/index')['SheetDescription']
  const SheetFooter: typeof import('./src/components/ui/sheet/index')['SheetFooter']
  const SheetHeader: typeof import('./src/components/ui/sheet/index')['SheetHeader']
  const SheetTitle: typeof import('./src/components/ui/sheet/index')['SheetTitle']
  const SheetTrigger: typeof import('./src/components/ui/sheet/index')['SheetTrigger']
  const SideBarActionsEnum: typeof import('./src/types/SideBarActionsEnum')['SideBarActionsEnum']
  const StoreCacheKey: typeof import('./src/types/StoreCacheKeys')['StoreCacheKey']
  const Table: typeof import('./src/components/ui/table/index')['Table']
  const TableBody: typeof import('./src/components/ui/table/index')['TableBody']
  const TableCaption: typeof import('./src/components/ui/table/index')['TableCaption']
  const TableCell: typeof import('./src/components/ui/table/index')['TableCell']
  const TableEmpty: typeof import('./src/components/ui/table/index')['TableEmpty']
  const TableFooter: typeof import('./src/components/ui/table/index')['TableFooter']
  const TableHead: typeof import('./src/components/ui/table/index')['TableHead']
  const TableHeader: typeof import('./src/components/ui/table/index')['TableHeader']
  const TableRow: typeof import('./src/components/ui/table/index')['TableRow']
  const UserLoginRequest: typeof import('./src/types/UserLoginRequest')['default']
  const acceptHMRUpdate: typeof import('pinia')['acceptHMRUpdate']
  const avatarVariant: typeof import('./src/components/ui/avatar/index')['avatarVariant']
  const buttonVariants: typeof import('./src/components/ui/button/index')['buttonVariants']
  const computed: typeof import('vue')['computed']
  const createApp: typeof import('vue')['createApp']
  const customRef: typeof import('vue')['customRef']
  const defineAsyncComponent: typeof import('vue')['defineAsyncComponent']
  const defineComponent: typeof import('vue')['defineComponent']
  const defineStore: typeof import('pinia')['defineStore']
  const effectScope: typeof import('vue')['effectScope']
  const getCurrentInstance: typeof import('vue')['getCurrentInstance']
  const getCurrentScope: typeof import('vue')['getCurrentScope']
  const h: typeof import('vue')['h']
  const inject: typeof import('vue')['inject']
  const isProxy: typeof import('vue')['isProxy']
  const isReactive: typeof import('vue')['isReactive']
  const isReadonly: typeof import('vue')['isReadonly']
  const isRef: typeof import('vue')['isRef']
  const markRaw: typeof import('vue')['markRaw']
  const nextTick: typeof import('vue')['nextTick']
  const onActivated: typeof import('vue')['onActivated']
  const onBeforeMount: typeof import('vue')['onBeforeMount']
  const onBeforeRouteLeave: typeof import('vue-router')['onBeforeRouteLeave']
  const onBeforeRouteUpdate: typeof import('vue-router')['onBeforeRouteUpdate']
  const onBeforeUnmount: typeof import('vue')['onBeforeUnmount']
  const onBeforeUpdate: typeof import('vue')['onBeforeUpdate']
  const onDeactivated: typeof import('vue')['onDeactivated']
  const onErrorCaptured: typeof import('vue')['onErrorCaptured']
  const onMounted: typeof import('vue')['onMounted']
  const onRenderTracked: typeof import('vue')['onRenderTracked']
  const onRenderTriggered: typeof import('vue')['onRenderTriggered']
  const onScopeDispose: typeof import('vue')['onScopeDispose']
  const onServerPrefetch: typeof import('vue')['onServerPrefetch']
  const onUnmounted: typeof import('vue')['onUnmounted']
  const onUpdated: typeof import('vue')['onUpdated']
  const onWatcherCleanup: typeof import('vue')['onWatcherCleanup']
  const provide: typeof import('vue')['provide']
  const reactive: typeof import('vue')['reactive']
  const readonly: typeof import('vue')['readonly']
  const ref: typeof import('vue')['ref']
  const resolveComponent: typeof import('vue')['resolveComponent']
  const shallowReactive: typeof import('vue')['shallowReactive']
  const shallowReadonly: typeof import('vue')['shallowReadonly']
  const shallowRef: typeof import('vue')['shallowRef']
  const sheetVariants: typeof import('./src/components/ui/sheet/index')['sheetVariants']
  const storeToRefs: typeof import('pinia')['storeToRefs']
  const toRaw: typeof import('vue')['toRaw']
  const toRef: typeof import('vue')['toRef']
  const toRefs: typeof import('vue')['toRefs']
  const toValue: typeof import('vue')['toValue']
  const triggerRef: typeof import('vue')['triggerRef']
  const unref: typeof import('vue')['unref']
  const useAttrs: typeof import('vue')['useAttrs']
  const useAuthStore: typeof import('./src/stores/auth')['useAuthStore']
  const useCssModule: typeof import('vue')['useCssModule']
  const useCssVars: typeof import('vue')['useCssVars']
  const useEntityStore: typeof import('./src/stores/entity')['useEntityStore']
  const useErrorStore: typeof import('./src/stores/error')['useErrorStore']
  const useFormError: typeof import('./src/composables/formError')['useFormError']
  const useId: typeof import('vue')['useId']
  const useMenu: typeof import('./src/composables/menu')['useMenu']
  const useModel: typeof import('vue')['useModel']
  const useNotification: typeof import('./src/composables/useNotification')['default']
  const usePageStore: typeof import('./src/stores/page')['usePageStore']
  const useProfileStore: typeof import('./src/stores/profile')['useProfileStore']
  const useRoleAuth: typeof import('./src/composables/useRoleAuth')['useRoleAuth']
  const useRoute: typeof import('vue-router')['useRoute']
  const useRouter: typeof import('vue-router')['useRouter']
  const useSlots: typeof import('vue')['useSlots']
  const useSubEntityStore: typeof import('./src/stores/entity-sub')['useSubEntityStore']
  const useTemplateRef: typeof import('vue')['useTemplateRef']
  const watch: typeof import('vue')['watch']
  const watchEffect: typeof import('vue')['watchEffect']
  const watchPostEffect: typeof import('vue')['watchPostEffect']
  const watchSyncEffect: typeof import('vue')['watchSyncEffect']
}
// for type re-export
declare global {
  // @ts-ignore
  export type { Component, Slot, Slots, ComponentPublicInstance, ComputedRef, DirectiveBinding, ExtractDefaultPropTypes, ExtractPropTypes, ExtractPublicPropTypes, InjectionKey, PropType, Ref, MaybeRef, MaybeRefOrGetter, VNode, WritableComputedRef } from 'vue'
  import('vue')
  // @ts-ignore
  export type { AvatarVariants } from './src/components/ui/avatar/index'
  import('./src/components/ui/avatar/index')
  // @ts-ignore
  export type { ButtonVariants } from './src/components/ui/button/index'
  import('./src/components/ui/button/index')
  // @ts-ignore
  export type { UserRole, EmployeeInfo } from './src/composables/useRoleAuth'
  import('./src/composables/useRoleAuth')
  // @ts-ignore
  export type { AvatarProfile } from './src/types/AvatarProfile'
  import('./src/types/AvatarProfile')
  // @ts-ignore
  export type { AvatarProfileLink } from './src/types/AvatarProfileLink'
  import('./src/types/AvatarProfileLink')
  // @ts-ignore
  export type { CacheValidation } from './src/types/CacheValidation'
  import('./src/types/CacheValidation')
  // @ts-ignore
  export type { CacheValidationKeyInfo, CacheValidationInfo } from './src/types/CacheValidationInfo'
  import('./src/types/CacheValidationInfo')
  // @ts-ignore
  export type { CacheValidationRefreshProfileRequest } from './src/types/CacheValidationRefreshProfileRequest'
  import('./src/types/CacheValidationRefreshProfileRequest')
  // @ts-ignore
  export type { CacheValidationRefreshRequest } from './src/types/CacheValidationRefreshRequest'
  import('./src/types/CacheValidationRefreshRequest')
  // @ts-ignore
  export type { Json, Database, Tables, TablesInsert, TablesUpdate, Enums, CompositeTypes } from './src/types/DatabaseTypes'
  import('./src/types/DatabaseTypes')
  // @ts-ignore
  export type { EntityRecordWithRpc } from './src/types/EntityRecordWithRpc'
  import('./src/types/EntityRecordWithRpc')
  // @ts-ignore
  export type { ErrorExtended } from './src/types/ErrorExtended'
  import('./src/types/ErrorExtended')
  // @ts-ignore
  export type { ErrorNextPage } from './src/types/ErrorNextPage'
  import('./src/types/ErrorNextPage')
  // @ts-ignore
  export type { RegistrationUserRole, EveryShiftRegistrationData, OrganizationSetup, SkillOption } from './src/types/EveryShiftRegistration'
  import('./src/types/EveryShiftRegistration')
  // @ts-ignore
  export type { FormDataCreateEntity } from './src/types/FormDataCreateEntity'
  import('./src/types/FormDataCreateEntity')
  // @ts-ignore
  export type { FormDataCreateSubEntity } from './src/types/FormDataCreateSubEntity'
  import('./src/types/FormDataCreateSubEntity')
  // @ts-ignore
  export type { FormSelectOption } from './src/types/FormSelectOption'
  import('./src/types/FormSelectOption')
  // @ts-ignore
  export type { LinkProp } from './src/types/LinkProp'
  import('./src/types/LinkProp')
  // @ts-ignore
  export type { LoginData } from './src/types/LoginData'
  import('./src/types/LoginData')
  // @ts-ignore
  export type { PostgrestErrorExtended } from './src/types/PostgrestErrorExtended'
  import('./src/types/PostgrestErrorExtended')
  // @ts-ignore
  export type { RegistrationData } from './src/types/RegistrationData'
  import('./src/types/RegistrationData')
  // @ts-ignore
  export type { RequestProfile } from './src/types/RequestProfile'
  import('./src/types/RequestProfile')
  // @ts-ignore
  export type { RouterPathEnum } from './src/types/RouterPathEnum'
  import('./src/types/RouterPathEnum')
  // @ts-ignore
  export type { SideBarActionsEnum } from './src/types/SideBarActionsEnum'
  import('./src/types/SideBarActionsEnum')
  // @ts-ignore
  export type { SideBarLinkAction } from './src/types/SideBarLinkAction'
  import('./src/types/SideBarLinkAction')
  // @ts-ignore
  export type { StoreCacheKey } from './src/types/StoreCacheKeys'
  import('./src/types/StoreCacheKeys')
  // @ts-ignore
  export type { SupabaseAuthErrorExtended, SupabaseAuthApiErrorExtended } from './src/types/SupabaseAuthErrorExtended'
  import('./src/types/SupabaseAuthErrorExtended')
  // @ts-ignore
  export type { UpdateSupabaseEntityRequest } from './src/types/UpdateSupabaseEntityRequest'
  import('./src/types/UpdateSupabaseEntityRequest')
}
